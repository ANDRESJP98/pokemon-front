{"ast":null,"code":"import { useContext } from 'react';\nimport { ReactReduxContext } from '../components/Context';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\n\nexport function createStoreHook(context) {\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  if (context === void 0) {\n    context = ReactReduxContext;\n  }\n  var useReduxContext = context === ReactReduxContext ? useDefaultReduxContext : _s(function () {\n    _s();\n    return useContext(context);\n  }, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n  return _s2(function useStore() {\n    _s2();\n    var _useReduxContext = useReduxContext(),\n      store = _useReduxContext.store;\n    return store;\n  }, \"WaKMueXUGroj9iZ4iRdD8/X8Qug=\", false, function () {\n    return [useReduxContext];\n  });\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport var useStore = /*#__PURE__*/createStoreHook();","map":{"version":3,"names":["useContext","ReactReduxContext","useReduxContext","useDefaultReduxContext","createStoreHook","context","_s","$RefreshSig$","_s2","useStore","_useReduxContext","store"],"sources":["C:/Users/ACER/Downloads/POKEMON-FRONT/src/node_modules/react-redux/es/hooks/useStore.js"],"sourcesContent":["import { useContext } from 'react';\nimport { ReactReduxContext } from '../components/Context';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\n\nexport function createStoreHook(context) {\n  if (context === void 0) {\n    context = ReactReduxContext;\n  }\n\n  var useReduxContext = context === ReactReduxContext ? useDefaultReduxContext : function () {\n    return useContext(context);\n  };\n  return function useStore() {\n    var _useReduxContext = useReduxContext(),\n        store = _useReduxContext.store;\n\n    return store;\n  };\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport var useStore = /*#__PURE__*/createStoreHook();"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,SAASC,eAAe,IAAIC,sBAAsB,QAAQ,mBAAmB;AAC7E;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,eAAeA,CAACC,OAAO,EAAE;EAAA,IAAAC,EAAA,GAAAC,YAAA;IAAAC,GAAA,GAAAD,YAAA;EACvC,IAAIF,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAGJ,iBAAiB;EAC7B;EAEA,IAAIC,eAAe,GAAGG,OAAO,KAAKJ,iBAAiB,GAAGE,sBAAsB,GAAAG,EAAA,CAAG,YAAY;IAAAA,EAAA;IACzF,OAAON,UAAU,CAACK,OAAO,CAAC;EAC5B,CAAC;EACD,OAAAG,GAAA,CAAO,SAASC,QAAQA,CAAA,EAAG;IAAAD,GAAA;IACzB,IAAIE,gBAAgB,GAAGR,eAAe,CAAC,CAAC;MACpCS,KAAK,GAAGD,gBAAgB,CAACC,KAAK;IAElC,OAAOA,KAAK;EACd,CAAC;IAAA,QAJwBT,eAAe;EAAA;AAK1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIO,QAAQ,GAAG,aAAaL,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}