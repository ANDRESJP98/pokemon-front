{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/esm/extends\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";var _excluded=[\"pure\",\"areStatesEqual\",\"areOwnPropsEqual\",\"areStatePropsEqual\",\"areMergedPropsEqual\"];import connectAdvanced from'../components/connectAdvanced';import shallowEqual from'../utils/shallowEqual';import defaultMapDispatchToPropsFactories from'./mapDispatchToProps';import defaultMapStateToPropsFactories from'./mapStateToProps';import defaultMergePropsFactories from'./mergeProps';import defaultSelectorFactory from'./selectorFactory';/*\r\n  connect is a facade over connectAdvanced. It turns its args into a compatible\r\n  selectorFactory, which has the signature:\r\n\r\n    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps\r\n  \r\n  connect passes its args to connectAdvanced as options, which will in turn pass them to\r\n  selectorFactory each time a Connect component instance is instantiated or hot reloaded.\r\n\r\n  selectorFactory returns a final props selector from its mapStateToProps,\r\n  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,\r\n  mergePropsFactories, and pure args.\r\n\r\n  The resulting final props selector is called by the Connect component instance whenever\r\n  it receives new props or store state.\r\n */function match(arg,factories,name){for(var i=factories.length-1;i>=0;i--){var result=factories[i](arg);if(result)return result;}return function(dispatch,options){throw new Error(\"Invalid value of type \"+typeof arg+\" for \"+name+\" argument when connecting component \"+options.wrappedComponentName+\".\");};}function strictEqual(a,b){return a===b;}// createConnect with default args builds the 'official' connect behavior. Calling it with\n// different options opens up some testing and extensibility scenarios\nexport function createConnect(_temp){var _ref=_temp===void 0?{}:_temp,_ref$connectHOC=_ref.connectHOC,connectHOC=_ref$connectHOC===void 0?connectAdvanced:_ref$connectHOC,_ref$mapStateToPropsF=_ref.mapStateToPropsFactories,mapStateToPropsFactories=_ref$mapStateToPropsF===void 0?defaultMapStateToPropsFactories:_ref$mapStateToPropsF,_ref$mapDispatchToPro=_ref.mapDispatchToPropsFactories,mapDispatchToPropsFactories=_ref$mapDispatchToPro===void 0?defaultMapDispatchToPropsFactories:_ref$mapDispatchToPro,_ref$mergePropsFactor=_ref.mergePropsFactories,mergePropsFactories=_ref$mergePropsFactor===void 0?defaultMergePropsFactories:_ref$mergePropsFactor,_ref$selectorFactory=_ref.selectorFactory,selectorFactory=_ref$selectorFactory===void 0?defaultSelectorFactory:_ref$selectorFactory;return function connect(mapStateToProps,mapDispatchToProps,mergeProps,_ref2){if(_ref2===void 0){_ref2={};}var _ref3=_ref2,_ref3$pure=_ref3.pure,pure=_ref3$pure===void 0?true:_ref3$pure,_ref3$areStatesEqual=_ref3.areStatesEqual,areStatesEqual=_ref3$areStatesEqual===void 0?strictEqual:_ref3$areStatesEqual,_ref3$areOwnPropsEqua=_ref3.areOwnPropsEqual,areOwnPropsEqual=_ref3$areOwnPropsEqua===void 0?shallowEqual:_ref3$areOwnPropsEqua,_ref3$areStatePropsEq=_ref3.areStatePropsEqual,areStatePropsEqual=_ref3$areStatePropsEq===void 0?shallowEqual:_ref3$areStatePropsEq,_ref3$areMergedPropsE=_ref3.areMergedPropsEqual,areMergedPropsEqual=_ref3$areMergedPropsE===void 0?shallowEqual:_ref3$areMergedPropsE,extraOptions=_objectWithoutPropertiesLoose(_ref3,_excluded);var initMapStateToProps=match(mapStateToProps,mapStateToPropsFactories,'mapStateToProps');var initMapDispatchToProps=match(mapDispatchToProps,mapDispatchToPropsFactories,'mapDispatchToProps');var initMergeProps=match(mergeProps,mergePropsFactories,'mergeProps');return connectHOC(selectorFactory,_extends({// used in error messages\nmethodName:'connect',// used to compute Connect's displayName from the wrapped component's displayName.\ngetDisplayName:function getDisplayName(name){return\"Connect(\"+name+\")\";},// if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes\nshouldHandleStateChanges:Boolean(mapStateToProps),// passed through to selectorFactory\ninitMapStateToProps:initMapStateToProps,initMapDispatchToProps:initMapDispatchToProps,initMergeProps:initMergeProps,pure:pure,areStatesEqual:areStatesEqual,areOwnPropsEqual:areOwnPropsEqual,areStatePropsEqual:areStatePropsEqual,areMergedPropsEqual:areMergedPropsEqual},extraOptions));};}export default/*#__PURE__*/createConnect();","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","connectAdvanced","shallowEqual","defaultMapDispatchToPropsFactories","defaultMapStateToPropsFactories","defaultMergePropsFactories","defaultSelectorFactory","match","arg","factories","name","i","length","result","dispatch","options","Error","wrappedComponentName","strictEqual","a","b","createConnect","_temp","_ref","_ref$connectHOC","connectHOC","_ref$mapStateToPropsF","mapStateToPropsFactories","_ref$mapDispatchToPro","mapDispatchToPropsFactories","_ref$mergePropsFactor","mergePropsFactories","_ref$selectorFactory","selectorFactory","connect","mapStateToProps","mapDispatchToProps","mergeProps","_ref2","_ref3","_ref3$pure","pure","_ref3$areStatesEqual","areStatesEqual","_ref3$areOwnPropsEqua","areOwnPropsEqual","_ref3$areStatePropsEq","areStatePropsEqual","_ref3$areMergedPropsE","areMergedPropsEqual","extraOptions","initMapStateToProps","initMapDispatchToProps","initMergeProps","methodName","getDisplayName","shouldHandleStateChanges","Boolean"],"sources":["C:/Users/ACER/Downloads/POKEMON-FRONT/src/node_modules/react-redux/es/connect/connect.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"pure\", \"areStatesEqual\", \"areOwnPropsEqual\", \"areStatePropsEqual\", \"areMergedPropsEqual\"];\nimport connectAdvanced from '../components/connectAdvanced';\nimport shallowEqual from '../utils/shallowEqual';\nimport defaultMapDispatchToPropsFactories from './mapDispatchToProps';\nimport defaultMapStateToPropsFactories from './mapStateToProps';\nimport defaultMergePropsFactories from './mergeProps';\nimport defaultSelectorFactory from './selectorFactory';\n/*\r\n  connect is a facade over connectAdvanced. It turns its args into a compatible\r\n  selectorFactory, which has the signature:\r\n\r\n    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps\r\n  \r\n  connect passes its args to connectAdvanced as options, which will in turn pass them to\r\n  selectorFactory each time a Connect component instance is instantiated or hot reloaded.\r\n\r\n  selectorFactory returns a final props selector from its mapStateToProps,\r\n  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,\r\n  mergePropsFactories, and pure args.\r\n\r\n  The resulting final props selector is called by the Connect component instance whenever\r\n  it receives new props or store state.\r\n */\n\nfunction match(arg, factories, name) {\n  for (var i = factories.length - 1; i >= 0; i--) {\n    var result = factories[i](arg);\n    if (result) return result;\n  }\n\n  return function (dispatch, options) {\n    throw new Error(\"Invalid value of type \" + typeof arg + \" for \" + name + \" argument when connecting component \" + options.wrappedComponentName + \".\");\n  };\n}\n\nfunction strictEqual(a, b) {\n  return a === b;\n} // createConnect with default args builds the 'official' connect behavior. Calling it with\n// different options opens up some testing and extensibility scenarios\n\n\nexport function createConnect(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$connectHOC = _ref.connectHOC,\n      connectHOC = _ref$connectHOC === void 0 ? connectAdvanced : _ref$connectHOC,\n      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,\n      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? defaultMapStateToPropsFactories : _ref$mapStateToPropsF,\n      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,\n      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? defaultMapDispatchToPropsFactories : _ref$mapDispatchToPro,\n      _ref$mergePropsFactor = _ref.mergePropsFactories,\n      mergePropsFactories = _ref$mergePropsFactor === void 0 ? defaultMergePropsFactories : _ref$mergePropsFactor,\n      _ref$selectorFactory = _ref.selectorFactory,\n      selectorFactory = _ref$selectorFactory === void 0 ? defaultSelectorFactory : _ref$selectorFactory;\n\n  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {\n    if (_ref2 === void 0) {\n      _ref2 = {};\n    }\n\n    var _ref3 = _ref2,\n        _ref3$pure = _ref3.pure,\n        pure = _ref3$pure === void 0 ? true : _ref3$pure,\n        _ref3$areStatesEqual = _ref3.areStatesEqual,\n        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,\n        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,\n        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? shallowEqual : _ref3$areOwnPropsEqua,\n        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,\n        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? shallowEqual : _ref3$areStatePropsEq,\n        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,\n        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? shallowEqual : _ref3$areMergedPropsE,\n        extraOptions = _objectWithoutPropertiesLoose(_ref3, _excluded);\n\n    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');\n    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');\n    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');\n    return connectHOC(selectorFactory, _extends({\n      // used in error messages\n      methodName: 'connect',\n      // used to compute Connect's displayName from the wrapped component's displayName.\n      getDisplayName: function getDisplayName(name) {\n        return \"Connect(\" + name + \")\";\n      },\n      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes\n      shouldHandleStateChanges: Boolean(mapStateToProps),\n      // passed through to selectorFactory\n      initMapStateToProps: initMapStateToProps,\n      initMapDispatchToProps: initMapDispatchToProps,\n      initMergeProps: initMergeProps,\n      pure: pure,\n      areStatesEqual: areStatesEqual,\n      areOwnPropsEqual: areOwnPropsEqual,\n      areStatePropsEqual: areStatePropsEqual,\n      areMergedPropsEqual: areMergedPropsEqual\n    }, extraOptions));\n  };\n}\nexport default /*#__PURE__*/createConnect();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}