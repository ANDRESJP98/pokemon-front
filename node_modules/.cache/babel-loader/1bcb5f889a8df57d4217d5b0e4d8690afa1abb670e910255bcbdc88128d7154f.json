{"ast":null,"code":"import{useReducer,useRef,useMemo,useContext,useDebugValue}from'react';import{useReduxContext as useDefaultReduxContext}from'./useReduxContext';import{createSubscription}from'../utils/Subscription';import{useIsomorphicLayoutEffect}from'../utils/useIsomorphicLayoutEffect';import{ReactReduxContext}from'../components/Context';var refEquality=function refEquality(a,b){return a===b;};function useSelectorWithStoreAndSubscription(selector,equalityFn,store,contextSub){var _useReducer=useReducer(function(s){return s+1;},0),forceRender=_useReducer[1];var subscription=useMemo(function(){return createSubscription(store,contextSub);},[store,contextSub]);var latestSubscriptionCallbackError=useRef();var latestSelector=useRef();var latestStoreState=useRef();var latestSelectedState=useRef();var storeState=store.getState();var selectedState;try{if(selector!==latestSelector.current||storeState!==latestStoreState.current||latestSubscriptionCallbackError.current){var newSelectedState=selector(storeState);// ensure latest selected state is reused so that a custom equality function can result in identical references\nif(latestSelectedState.current===undefined||!equalityFn(newSelectedState,latestSelectedState.current)){selectedState=newSelectedState;}else{selectedState=latestSelectedState.current;}}else{selectedState=latestSelectedState.current;}}catch(err){if(latestSubscriptionCallbackError.current){err.message+=\"\\nThe error may be correlated with this previous error:\\n\"+latestSubscriptionCallbackError.current.stack+\"\\n\\n\";}throw err;}useIsomorphicLayoutEffect(function(){latestSelector.current=selector;latestStoreState.current=storeState;latestSelectedState.current=selectedState;latestSubscriptionCallbackError.current=undefined;});useIsomorphicLayoutEffect(function(){function checkForUpdates(){try{var newStoreState=store.getState();// Avoid calling selector multiple times if the store's state has not changed\nif(newStoreState===latestStoreState.current){return;}var _newSelectedState=latestSelector.current(newStoreState);if(equalityFn(_newSelectedState,latestSelectedState.current)){return;}latestSelectedState.current=_newSelectedState;latestStoreState.current=newStoreState;}catch(err){// we ignore all errors here, since when the component\n// is re-rendered, the selectors are called again, and\n// will throw again, if neither props nor store state\n// changed\nlatestSubscriptionCallbackError.current=err;}forceRender();}subscription.onStateChange=checkForUpdates;subscription.trySubscribe();checkForUpdates();return function(){return subscription.tryUnsubscribe();};},[store,subscription]);return selectedState;}/**\r\n * Hook factory, which creates a `useSelector` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useSelector` hook bound to the specified context.\r\n */export function createSelectorHook(context){if(context===void 0){context=ReactReduxContext;}var useReduxContext=context===ReactReduxContext?useDefaultReduxContext:function(){return useContext(context);};return function useSelector(selector,equalityFn){if(equalityFn===void 0){equalityFn=refEquality;}if(process.env.NODE_ENV!=='production'){if(!selector){throw new Error(\"You must pass a selector to useSelector\");}if(typeof selector!=='function'){throw new Error(\"You must pass a function as a selector to useSelector\");}if(typeof equalityFn!=='function'){throw new Error(\"You must pass a function as an equality function to useSelector\");}}var _useReduxContext=useReduxContext(),store=_useReduxContext.store,contextSub=_useReduxContext.subscription;var selectedState=useSelectorWithStoreAndSubscription(selector,equalityFn,store,contextSub);useDebugValue(selectedState);return selectedState;};}/**\r\n * A hook to access the redux store's state. This hook takes a selector function\r\n * as an argument. The selector is called with the store state.\r\n *\r\n * This hook takes an optional equality comparison function as the second parameter\r\n * that allows you to customize the way the selected state is compared to determine\r\n * whether the component needs to be re-rendered.\r\n *\r\n * @param {Function} selector the selector function\r\n * @param {Function=} equalityFn the function that will be used to determine equality\r\n *\r\n * @returns {any} the selected state\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useSelector } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const counter = useSelector(state => state.counter)\r\n *   return <div>{counter}</div>\r\n * }\r\n */export var useSelector=/*#__PURE__*/createSelectorHook();","map":{"version":3,"names":["useReducer","useRef","useMemo","useContext","useDebugValue","useReduxContext","useDefaultReduxContext","createSubscription","useIsomorphicLayoutEffect","ReactReduxContext","refEquality","a","b","useSelectorWithStoreAndSubscription","selector","equalityFn","store","contextSub","_useReducer","s","forceRender","subscription","latestSubscriptionCallbackError","latestSelector","latestStoreState","latestSelectedState","storeState","getState","selectedState","current","newSelectedState","undefined","err","message","stack","checkForUpdates","newStoreState","_newSelectedState","onStateChange","trySubscribe","tryUnsubscribe","createSelectorHook","context","useSelector","process","env","NODE_ENV","Error","_useReduxContext"],"sources":["C:/Users/ACER/Downloads/POKEMON-FRONT/src/node_modules/react-redux/es/hooks/useSelector.js"],"sourcesContent":["import { useReducer, useRef, useMemo, useContext, useDebugValue } from 'react';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\nimport { ReactReduxContext } from '../components/Context';\n\nvar refEquality = function refEquality(a, b) {\n  return a === b;\n};\n\nfunction useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub) {\n  var _useReducer = useReducer(function (s) {\n    return s + 1;\n  }, 0),\n      forceRender = _useReducer[1];\n\n  var subscription = useMemo(function () {\n    return createSubscription(store, contextSub);\n  }, [store, contextSub]);\n  var latestSubscriptionCallbackError = useRef();\n  var latestSelector = useRef();\n  var latestStoreState = useRef();\n  var latestSelectedState = useRef();\n  var storeState = store.getState();\n  var selectedState;\n\n  try {\n    if (selector !== latestSelector.current || storeState !== latestStoreState.current || latestSubscriptionCallbackError.current) {\n      var newSelectedState = selector(storeState); // ensure latest selected state is reused so that a custom equality function can result in identical references\n\n      if (latestSelectedState.current === undefined || !equalityFn(newSelectedState, latestSelectedState.current)) {\n        selectedState = newSelectedState;\n      } else {\n        selectedState = latestSelectedState.current;\n      }\n    } else {\n      selectedState = latestSelectedState.current;\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current) {\n      err.message += \"\\nThe error may be correlated with this previous error:\\n\" + latestSubscriptionCallbackError.current.stack + \"\\n\\n\";\n    }\n\n    throw err;\n  }\n\n  useIsomorphicLayoutEffect(function () {\n    latestSelector.current = selector;\n    latestStoreState.current = storeState;\n    latestSelectedState.current = selectedState;\n    latestSubscriptionCallbackError.current = undefined;\n  });\n  useIsomorphicLayoutEffect(function () {\n    function checkForUpdates() {\n      try {\n        var newStoreState = store.getState(); // Avoid calling selector multiple times if the store's state has not changed\n\n        if (newStoreState === latestStoreState.current) {\n          return;\n        }\n\n        var _newSelectedState = latestSelector.current(newStoreState);\n\n        if (equalityFn(_newSelectedState, latestSelectedState.current)) {\n          return;\n        }\n\n        latestSelectedState.current = _newSelectedState;\n        latestStoreState.current = newStoreState;\n      } catch (err) {\n        // we ignore all errors here, since when the component\n        // is re-rendered, the selectors are called again, and\n        // will throw again, if neither props nor store state\n        // changed\n        latestSubscriptionCallbackError.current = err;\n      }\n\n      forceRender();\n    }\n\n    subscription.onStateChange = checkForUpdates;\n    subscription.trySubscribe();\n    checkForUpdates();\n    return function () {\n      return subscription.tryUnsubscribe();\n    };\n  }, [store, subscription]);\n  return selectedState;\n}\n/**\r\n * Hook factory, which creates a `useSelector` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useSelector` hook bound to the specified context.\r\n */\n\n\nexport function createSelectorHook(context) {\n  if (context === void 0) {\n    context = ReactReduxContext;\n  }\n\n  var useReduxContext = context === ReactReduxContext ? useDefaultReduxContext : function () {\n    return useContext(context);\n  };\n  return function useSelector(selector, equalityFn) {\n    if (equalityFn === void 0) {\n      equalityFn = refEquality;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!selector) {\n        throw new Error(\"You must pass a selector to useSelector\");\n      }\n\n      if (typeof selector !== 'function') {\n        throw new Error(\"You must pass a function as a selector to useSelector\");\n      }\n\n      if (typeof equalityFn !== 'function') {\n        throw new Error(\"You must pass a function as an equality function to useSelector\");\n      }\n    }\n\n    var _useReduxContext = useReduxContext(),\n        store = _useReduxContext.store,\n        contextSub = _useReduxContext.subscription;\n\n    var selectedState = useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub);\n    useDebugValue(selectedState);\n    return selectedState;\n  };\n}\n/**\r\n * A hook to access the redux store's state. This hook takes a selector function\r\n * as an argument. The selector is called with the store state.\r\n *\r\n * This hook takes an optional equality comparison function as the second parameter\r\n * that allows you to customize the way the selected state is compared to determine\r\n * whether the component needs to be re-rendered.\r\n *\r\n * @param {Function} selector the selector function\r\n * @param {Function=} equalityFn the function that will be used to determine equality\r\n *\r\n * @returns {any} the selected state\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useSelector } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const counter = useSelector(state => state.counter)\r\n *   return <div>{counter}</div>\r\n * }\r\n */\n\nexport var useSelector = /*#__PURE__*/createSelectorHook();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}