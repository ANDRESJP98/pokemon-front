[{"C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\index.js":"1","C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\App.js":"2","C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\reportWebVitals.js":"3","C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\store\\store.js":"4","C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\reducer\\reducer.js":"5","C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\components\\landing.jsx":"6","C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\components\\create.jsx":"7","C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\components\\detail.jsx":"8","C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\actions\\actions.js":"9","C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\components\\Home.jsx":"10","C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\components\\Card.jsx":"11","C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\components\\paginado.jsx":"12","C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\components\\home.jsx":"13"},{"size":796,"mtime":1686359606907,"results":"14","hashOfConfig":"15"},{"size":599,"mtime":1686349494694,"results":"16","hashOfConfig":"15"},{"size":397,"mtime":1686347436155,"results":"17","hashOfConfig":"15"},{"size":288,"mtime":1686347550200,"results":"18","hashOfConfig":"15"},{"size":4426,"mtime":1686347613615,"results":"19","hashOfConfig":"15"},{"size":387,"mtime":1686355618176,"results":"20","hashOfConfig":"15"},{"size":6492,"mtime":1686348310071,"results":"21","hashOfConfig":"15"},{"size":3248,"mtime":1686348353436,"results":"22","hashOfConfig":"15"},{"size":2174,"mtime":1686359976933,"results":"23","hashOfConfig":"15"},{"size":10290,"mtime":1686349563999,"results":"24","hashOfConfig":"25"},{"size":688,"mtime":1686348129505,"results":"26","hashOfConfig":"15"},{"size":1518,"mtime":1686348844462,"results":"27","hashOfConfig":"15"},{"size":10290,"mtime":1686349563999,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1absspf",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},"tdhbfv",{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\index.js",[],[],"C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\App.js",[],[],"C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\reportWebVitals.js",[],[],"C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\store\\store.js",[],[],"C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\reducer\\reducer.js",["73","74","75","76","77","78","79"],[],"const initialState={\r\n    pokemons:[],\r\n    allPokemons:[],\r\n    types:[],\r\n    detail:[]\r\n};\r\nconst rootReducer=(state=initialState, action)=>{\r\n    switch(action.type){\r\n        case \"GET_POKEMONS\":\r\n            return {...state, \r\n                pokemons:action.payload, \r\n                allPokemons:action.payload };\r\n        case \"GET_NAME_POKEMONS\": \r\n        return{...state,\r\n            pokemons:action.payload};\r\n        case \"GET_TYPES\":\r\n        return {...state,\r\n        types:action.payload}\r\n        case \"POST_POKEMONS\":\r\n        return {\r\n        ...state}\r\n        case \"ORDER_BY_NAME\":\r\n        const sortedArr=action.payload===\"asc\" ?\r\n        state.pokemons.sort(function(a,b){\r\n        if(a.name>b.name){return 1;\r\n        }if(b.name>a.name){return -1;\r\n        }return 0;}) :\r\n        state.pokemons.sort(function(a,b){\r\n        if(a.name>b.name){return -1;\r\n        }if(b.name>a.name){return 1;\r\n        }})\r\n        return{...state,\r\n        pokemons:sortedArr};\r\n        case \"ORDER_BY_ATTACK\":\r\n        const sortedArrA=action.payload===\"asc attack\" ?\r\n        state.pokemons.sort(function(a,b){\r\n        if(a.attack>b.attack){return 1;\r\n        }if(b.attack>a.attack){return -1;\r\n        }return 0;}) :\r\n        state.pokemons.sort(function(a,b){\r\n        if(a.attack>b.attack){return -1;\r\n        }if(b.attack>a.attack){return 1;\r\n        }})\r\n        return{...state,\r\n        pokemons:sortedArrA};\r\n        case \"ORDER_BY_WEIGHT\":\r\n        const sortedArrB=action.payload===\"asc weight\" ?\r\n        state.pokemons.sort(function(a,b){\r\n        if(a.weight>b.weight){return 1;\r\n        }if(b.weight>a.weight){return -1;\r\n        }return 0;}) :\r\n        state.pokemons.sort(function(a,b){\r\n        if(a.weight>b.weight){return -1;\r\n        }if(b.weight>a.weight){return 1;\r\n        }})\r\n        return{...state,\r\n        pokemons:sortedArrB};\r\n        case \"ORDER_BY_HEIGHT\":\r\n        const sortedArrC=action.payload===\"asc height\" ?\r\n        state.pokemons.sort(function(a,b){\r\n        if(a.height>b.height){return 1;\r\n        }if(b.height>a.height){return -1;\r\n        }return 0;}) :\r\n        state.pokemons.sort(function(a,b){\r\n        if(a.height>b.height){return -1;\r\n        }if(b.height>a.height){return 1;\r\n        }})\r\n        return{...state,\r\n        pokemons:sortedArrC};\r\n        case \"ORDER_BY_SPEED\":\r\n        const sortedArrD=action.payload===\"asc speed\" ?\r\n        state.pokemons.sort(function(a,b){\r\n        if(a.speed>b.speed){return 1;\r\n        }if(b.speed>a.speed){return -1;\r\n        }return 0;}) :\r\n        state.pokemons.sort(function(a,b){\r\n        if(a.speed>b.speed){return -1;\r\n        }if(b.speed>a.speed){return 1;\r\n        }})\r\n        return{...state,\r\n        pokemons:sortedArrD};\r\n        case \"ORDER_BY_LIFE\":\r\n        const sortedArrE=action.payload===\"asc life\" ?\r\n        state.pokemons.sort(function(a,b){\r\n        if(a.life>b.life){return 1;\r\n        }if(b.life>a.life){return -1;\r\n        }return 0;}) :\r\n        state.pokemons.sort(function(a,b){\r\n        if(a.life>b.life){return -1;\r\n        }if(b.life>a.life){return 1;\r\n        }})\r\n        return{...state,\r\n        pokemons:sortedArrE};\r\n        case \"ORDER_BY_DEFENSE\":\r\n        const sortedArrF=action.payload===\"asc defense\" ?\r\n        state.pokemons.sort(function(a,b){\r\n        if(a.defense>b.defense){return 1;\r\n        }if(b.defense>a.defense){return -1;\r\n        }return 0;}) :\r\n        state.pokemons.sort(function(a,b){\r\n        if(a.defense>b.defense){return -1;\r\n        }if(b.defense>a.defense){return 1;\r\n        }})\r\n        return{...state,\r\n        pokemons:sortedArrF};\r\n        case \"FILTER_BY_TYPES\":\r\n        const allPokemons=state.allPokemons\r\n        const statusFiltered=action.payload === 'All' ? allPokemons : allPokemons.filter(elem=>elem.Types.some(type => type.name === action.payload) );\r\n        return {...state, \r\n        pokemons:statusFiltered };\r\n        case \"FILTER_CREATED\":\r\n        const allPokemonsc=state.allPokemons\r\n        const createdFiltered=action.payload==='created' ? allPokemonsc.filter(elem=>elem.created) : allPokemonsc.filter(elem=>!elem.created);\r\n        return {...state,\r\n        pokemons: action.payload==='All' ? state.allPokemons :createdFiltered };\r\n        case \"GET_DETAILS\":\r\n        return {...state,\r\n                detail:action.payload };\r\n        default:\r\n        return {...state};\r\n    }\r\n}\r\n\r\nexport default rootReducer","C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\components\\landing.jsx",[],[],"C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\components\\create.jsx",["80"],[],"import React, {useState, useEffect} from \"react\";\r\nimport {getTypes, postPokemons} from '../actions/actions';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport  style from \"./create.module.css\";\r\n\r\nfunction validate(input){\r\n    let errors = {};\r\n  if (!input.name) {\r\n    errors.name = \"¡A name is required!\";\r\n  }\r\n  if (!input.image) {\r\n    errors.image = \"¡An URL is required!\";\r\n  }if(input.type.length<2){\r\n    errors.type=\"¡Minimun 2 types required!\"\r\n  }else errors.type=\"\"\r\n  return errors;\r\n}\r\nexport default function CreatePokemon(){\r\n    const dispatch=useDispatch()\r\n    const history=useHistory()\r\n    const types=useSelector((state)=>state.types)\r\n    const [errors, setErrors]=useState({\r\n        name:\"\", \r\n        image:\"\",\r\n        type:[]\r\n    })\r\n    const [input, setInput]=useState({\r\n        name:\"\", \r\n        image:\"\",\r\n        life:\"\", \r\n        attack:\"\",\r\n        defense:\"\",\r\n        speed:\"\", \r\n        height:\"\", \r\n        weight:\"\", \r\n        type:[]\r\n    })\r\n\r\n    const handleChange=(e)=>{\r\n        setInput({\r\n            ...input,\r\n            [e.target.name]:e.target.value\r\n        })\r\n        setErrors(validate({\r\n            ...input,\r\n            [e.target.name]:e.target.value\r\n        }))\r\n    };\r\n    const handleSelect=(e)=>{\r\n            setInput({\r\n                ...input, \r\n                type:[...input.type,e.target.value]\r\n        })\r\n    }\r\n    const handleDelete=(elem)=>{\r\n        setInput({\r\n            ...input, \r\n            type:input.type.filter(type=>type!==elem)\r\n    })\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        if (!input.name || !input.image || input.type.length < 2) {\r\n            alert(\"Please, put a name, an image or aleast 2 types to create the pokemon.\");\r\n            return;\r\n          }\r\n        dispatch(postPokemons(input))\r\n        alert(\"Pokemon created\")\r\n        setInput({\r\n        name:\"\", \r\n        image:\"\",\r\n        life:\"\", \r\n        attack:\"\",\r\n        defense:\"\",\r\n        speed:\"\", \r\n        height:\"\", \r\n        weight:\"\", \r\n        type:[],\r\n        })\r\n        history.push(\"/home\")\r\n    }\r\n    useEffect(()=>{\r\n        dispatch(getTypes())\r\n    },[]);\r\n    return (\r\n        <div className={style.totalImg}>\r\n            <div className={style.sameSpot}>\r\n            <Link to='/home'><button className={style.button}>Back to home</button></Link>\r\n            <img src=\"https://1000marcas.net/wp-content/uploads/2020/01/Logo-Pokemon.png\" alt=\"img not found\"\r\n            width=\"335px\" height=\"208px\" className={style.img}/>\r\n            <h1 className={style.text}>Create your pokemon</h1>\r\n            <p className={style.text3}>Add the image, name and details about your pokemon</p>\r\n            <form onSubmit={(e)=>handleSubmit(e)} >\r\n            <div className={style.image}>\r\n                <img className={style.imagePosition} src={input.image} alt=\"\"\r\n            width=\"400px\" height=\"400px\"/>\r\n                <input placeholder=\"ImageUrl\" className={style.input2} type=\"text\"  value={input.image} name=\"image\" onChange={(e)=>handleChange(e)} />\r\n                </div>\r\n                {errors.image && <p className={style.error1}>{errors.image}</p>}\r\n                <div >\r\n                <input placeholder=\"Name\" className={style.input} type='text' value={input.name} name='name' onChange={(e)=>handleChange(e)}></input>\r\n                </div>\r\n                {errors.name &&(\r\n                    <p className={style.error2}>{errors.name }</p>\r\n                )}\r\n                <div className={style.position} >\r\n                <label className={style.text2}>Life</label>\r\n                <input className={style.bar} type='range' min=\"1\" max=\"255\" value={input.life} name='life' onChange={(e)=>handleChange(e)}></input>\r\n                <span>{input.life}</span>\r\n                </div>\r\n                <div className={style.position} >\r\n                <label className={style.text2}>Attack</label>\r\n                <input className={style.bar} type='range' min=\"1\" max=\"200\" value={input.attack} name='attack' onChange={(e)=>handleChange(e)}></input>\r\n                <span>{input.attack}</span>\r\n                </div>\r\n                <div className={style.position} >\r\n                <label className={style.text2}>Defense</label>\r\n                <input className={style.bar} type='range'  min=\"1\" max=\"250\" value={input.defense} name='defense' onChange={(e)=>handleChange(e)}></input>\r\n                <span>{input.defense}</span>\r\n                </div>\r\n                <div className={style.position} >\r\n                <label className={style.text2}>Speed</label>\r\n                <input className={style.bar} type='range'  min=\"1\" max=\"200\" value={input.speed} name='speed' onChange={(e)=>handleChange(e)}></input>\r\n                <span>{input.speed}</span>\r\n                </div>\r\n                <div className={style.position} >\r\n                <label className={style.text2}>Height</label>\r\n                <input className={style.bar} type='range'  min=\"1\" max=\"1000\" value={input.height} name='height' onChange={(e)=>handleChange(e)}></input>\r\n                <span>{input.height}</span>\r\n                </div>\r\n                <div className={style.position} >\r\n                <label className={style.text2} >Weight</label>\r\n                <input className={style.bar} type='range'  min=\"1\" max=\"10000\" value={input.weight} name='weight' onChange={(e)=>handleChange(e)}></input>\r\n                <span>{input.weight}</span>\r\n                </div>\r\n                <div className={style.position} >\r\n                <select onChange={(e)=>handleSelect(e)}> \r\n                {types.map((elem)=> {return <option value={elem.name}>{elem.name}</option>})}\r\n                </select>\r\n                </div>\r\n                <div className={style.types}>\r\n                {input.type.map(elem=>\r\n                <div className={style.distance} >\r\n                    <p onChange={(e)=>handleChange(e)}>{elem}</p>\r\n                    <button className={style.buttonX} onClick={()=>handleDelete(elem)}>x</button>\r\n                </div>)}\r\n                </div>\r\n                 {errors.type &&(\r\n                    <p className={style.error3}>{errors.type}</p>\r\n                )} \r\n                <button className={style.button2} type=\"submit\">Create pokemon</button>\r\n\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\components\\detail.jsx",["81"],[],"import React, { useEffect, useState} from \"react\";\r\nimport {getDetail} from '../actions/actions';\r\nimport { Link} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport style from \"./detail.module.css\"\r\n\r\nexport default function DetailPokemon(props){\r\n\r\nconst dispatch=useDispatch();\r\nconst [loading, setLoading] = useState(true);\r\n\r\nuseEffect(()=>{\r\n    setLoading(true);\r\n    dispatch(getDetail(props.match.params.id))\r\n      .then(() => setLoading(false));\r\n  },[dispatch, props.match.params.id])\r\nconst myPokemon=useSelector((state)=>state.detail)\r\nreturn (\r\n    <div className={style.sameSpot}>\r\n    <div className={style.detail}>\r\n\r\n        <div><Link to=\"/home\"><button className={style.button1}>Back to home</button></Link></div>\r\n        {\r\n\r\n            loading ?\r\n            <div className={style.img2}>\r\n              <img  src=\"https://media.tenor.com/74l5y1hUdtwAAAAj/pokemon.gif\" width=\"250px\" height=\"250px\" />\r\n              <p>Loading...</p>\r\n            </div>\r\n            :\r\n            <div className={style.position}>\r\n                <div className={style.text}>\r\n                <h1>{myPokemon[0].name.charAt(0).toUpperCase() + myPokemon[0].name.slice(1)}</h1>\r\n                <img alt='' width='300px' height=\"300px\" src={myPokemon[0].img? myPokemon[0].img: myPokemon[0].image} />\r\n                </div>\r\n                <div>\r\n                <div >\r\n                <label className={style.text2}>Life</label><input className={style.range} type=\"range\" min=\"1\" max=\"255\" value={myPokemon[0].life}/><span className={style.text2}>{myPokemon[0].life}</span>\r\n                </div>\r\n                <div>\r\n                <label className={style.text2}>Attack</label><input className={style.range} type=\"range\" min=\"1\" max=\"200\" value={myPokemon[0].attack}/><span className={style.text2}>{myPokemon[0].attack}</span>\r\n                </div>\r\n                <div>\r\n                <label className={style.text2}>Defense</label><input className={style.range} type=\"range\" min=\"1\" max=\"250\" value={myPokemon[0].defense}/><span className={style.text2}>{myPokemon[0].defense}</span>\r\n                </div>\r\n                <div>\r\n                <label className={style.text2}>Speed</label><input className={style.range} type=\"range\" min=\"1\" max=\"200\" value={myPokemon[0].speed}/><span className={style.text2}>{myPokemon[0].speed}</span>\r\n                </div>\r\n                <div>\r\n                <label className={style.text2}>Height</label><input className={style.range} type=\"range\" min=\"1\" max=\"1000\" value={myPokemon[0].height}/><span className={style.text2}>{myPokemon[0].height}</span>\r\n                </div>\r\n                <div> \r\n                <label className={style.text2}>Weight</label><input className={style.range} type=\"range\" min=\"1\" max=\"10000\" value={myPokemon[0].weight}/><span className={style.text2}>{myPokemon[0].weight}</span>\r\n                </div>\r\n                <div className={style.text1}> \r\n                    <h1>{myPokemon[0].Types.map(elem=>elem.name.charAt(0).toUpperCase() + elem.name.slice(1)).join(\" \")}</h1> \r\n                </div>\r\n                </div>              \r\n            </div>\r\n\r\n        }\r\n        </div>\r\n    </div>\r\n)\r\n}","C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\actions\\actions.js",[],[],"C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\components\\Home.jsx",["82","83","84","85","86"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPokemons, orderByWeight,orderByHeight, orderBySpeed, orderByLife, orderByDefense, orderByName, orderByAttack, filterPokemonsByTypes, filterCreated } from \"../actions/actions\";\r\nimport Card from \"./Card\";\r\nimport Paginacion from \"./paginado\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getNamePokemons } from \"../actions/actions\";\r\nimport style from './home.module.css'\r\n\r\nexport default function Home(){\r\n    const dispatch =useDispatch();\r\n    const allPokemons = useSelector(state=>state.pokemons)\r\n    const [orden,setOrden]=useState('')\r\n    const [currentPage, setCurrentPage]=useState(1)\r\n    const [pokemonsPerPage, setpokemonsPerPage]=useState(12)\r\n    const [loading, setLoading] = useState(true);\r\n    const indexOfLastPokemon=currentPage * pokemonsPerPage\r\n    const indexOfFirstPokemon=indexOfLastPokemon - pokemonsPerPage\r\n    const currentPokemons= allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\r\n    const [name, setName]=useState(\"\")\r\n    const [searchError, setSearchError] = useState(false); \r\n    const [selectedSort, setSelectedSort] = useState(\"\"); // Estado del filtro de ordenamiento\r\n    const [selectedFilterType, setSelectedFilterType] = useState(\"All\"); // Estado del filtro de tipos\r\n    const [selectedFilterCreated, setSelectedFilterCreated] = useState(\"All\"); // Estado del filtro de creación\r\n    const paginado =(pageNumber)=>{\r\n        setCurrentPage(pageNumber)\r\n    }\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        dispatch(getPokemons())\r\n        .then(() => setLoading(false));\r\n    },[dispatch])\r\n\r\n    const handleClick =(e)=>{\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        dispatch(getPokemons())\r\n        .then(() => {setLoading(false)\r\n        setOrden(\"\"); \r\n      setCurrentPage(1); \r\n      setName(\"\"); \r\n      setSearchError(false); \r\n      setSelectedSort(\"\"); \r\n      setSelectedFilterType(\"All\"); \r\n      setSelectedFilterCreated(\"All\"); \r\n    });\r\n}\r\n    const handleSort =(e)=>{\r\n        e.preventDefault();\r\n        dispatch(orderByName(e.target.value))\r\n        setCurrentPage(1);\r\n        setSelectedSort(e.target.value);\r\n    };\r\n    const handleSortAttack =(e)=>{\r\n        e.preventDefault();\r\n        dispatch(orderByAttack(e.target.value))\r\n        setCurrentPage(1);\r\n        setSelectedSort(e.target.value);\r\n    };\r\n    const handleSortDefense =(e)=>{\r\n        e.preventDefault();\r\n        dispatch(orderByDefense(e.target.value))\r\n        setCurrentPage(1);\r\n        setSelectedSort(e.target.value);\r\n    };\r\n    const handleSortLife =(e)=>{\r\n        e.preventDefault();\r\n        dispatch(orderByLife(e.target.value))\r\n        setCurrentPage(1);\r\n        setSelectedSort(e.target.value);\r\n    };\r\n    const handleSortWeight =(e)=>{\r\n        e.preventDefault();\r\n        dispatch(orderByWeight(e.target.value))\r\n        setCurrentPage(1);\r\n        setSelectedSort(e.target.value);\r\n    };\r\n    const handleSortHeight =(e)=>{\r\n        e.preventDefault();\r\n        dispatch(orderByHeight(e.target.value))\r\n        setCurrentPage(1);\r\n        setSelectedSort(e.target.value);\r\n    };\r\n    const handleSortSpeed =(e)=>{\r\n        e.preventDefault();\r\n        dispatch(orderBySpeed(e.target.value))\r\n        setCurrentPage(1);\r\n        setSelectedSort(e.target.value);\r\n    };\r\n    const handleFilterTypes=(e)=>{\r\n        e.preventDefault();\r\n        dispatch(filterPokemonsByTypes(e.target.value))\r\n        setSelectedFilterType(e.target.value);\r\n    };\r\n    const handleFilterCreated=(e)=>{\r\n        e.preventDefault();\r\n        dispatch(filterCreated(e.target.value))\r\n        setSelectedFilterCreated(e.target.value);\r\n    };    \r\n    function handleInputChange(e){\r\n        e.preventDefault()\r\n        setName(e.target.value)\r\n\r\n    }\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        dispatch(getNamePokemons(name))\r\n        .then(() => {setLoading(false);\r\n        setSearchError(false) // Si la búsqueda tiene éxito, se restablece el estado de error\r\n        })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setSearchError(true); // Si ocurre un error en la búsqueda, se establece el estado de error a true\r\n      });\r\n    }\r\n\r\n    return (\r\n        <div className={style.container1}>\r\n        <div className={style.columnsL}>\r\n            <div className={style.sameSpot}>\r\n        <div >\r\n        <Link to='/pokemon'><button className={style.button1}>Add pokemons</button></Link>\r\n        </div>\r\n        <div>\r\n        <button className={style.button2} onClick={e=>{handleClick(e)}}>Clear filters</button>\r\n        </div>\r\n        <div >\r\n        <input value={name} type=\"text\" placeholder='Search...' onChange={(e)=>handleInputChange(e)}></input>\r\n            <button  type=\"submit\" onClick={(e)=>handleSubmit(e)} >Search</button>\r\n        </div>\r\n        <div >\r\n        <select value={selectedSort} onChange={e=>handleSort(e)} className={style.order}>\r\n            <option>---</option>\r\n            <option value=\"asc\" >A-Z</option>\r\n            <option value=\"desc\">Z-A</option>\r\n        </select>\r\n        <select  value={selectedSort} onChange={e=>handleSortLife(e)} className={style.order}>\r\n            <option>---</option>\r\n            <option value=\"asc life\" >-life</option>\r\n            <option value=\"desc life\">+life</option>\r\n        </select>\r\n        </div>\r\n        <div>\r\n        <select  value={selectedSort} onChange={e=>handleSortAttack(e)} className={style.order}>\r\n            <option>---</option>\r\n            <option value=\"asc attack\">-Attack</option>\r\n            <option value=\"desc attack\">+ Attack</option>\r\n        </select>\r\n        <select  value={selectedSort} onChange={e=>handleSortDefense(e)} className={style.order}>\r\n            <option>---</option>\r\n            <option value=\"asc defense\">-Defense</option>\r\n            <option value=\"desc defense\">+ Defense</option>\r\n        </select>\r\n        </div>\r\n        <div>\r\n        <select  value={selectedSort} onChange={e=>handleSortWeight(e)} className={style.order}>\r\n            <option>---</option>\r\n            <option value=\"asc weight\">-Weight</option>\r\n            <option value=\"desc weight\">+ weight</option>\r\n        </select>\r\n        <select  value={selectedSort} onChange={e=>handleSortHeight(e)} className={style.order}>\r\n            <option>---</option>\r\n            <option value=\"asc height\">-height</option>\r\n            <option value=\"desc height\">+ height</option>\r\n        </select>\r\n        </div>\r\n        <div >\r\n        <select  value={selectedFilterCreated} onChange={e=>handleFilterCreated(e)} className={style.filter}>\r\n            <option value='All'>All</option>\r\n            <option value=\"created\">Created</option>\r\n            <option value=\"api\">From Api</option>\r\n        </select>\r\n        <select value={selectedFilterType} onChange={e=>handleFilterTypes(e)} className={style.filter}>\r\n            <option value='All'>All</option>\r\n            <option value=\"normal\">normal</option>\r\n            <option value=\"fighting\">fighting</option>\r\n            <option value=\"flying\">flying</option>\r\n            <option value=\"poison\">poison</option>\r\n            <option value=\"ground\">ground</option>\r\n            <option value=\"rock\">rock</option>\r\n            <option value=\"bug\">bug</option>\r\n            <option value=\"ghost\">ghost</option>\r\n            <option value=\"steel\">steel</option>\r\n            <option value=\"fire\">fire</option>\r\n            <option value=\"water\">water</option>\r\n            <option value=\"grass\">grass</option>\r\n            <option value=\"electric\">electric</option>\r\n            <option value=\"psychic\">psychic</option>\r\n            <option value=\"ice\">ice</option>\r\n            <option value=\"dragon\">dragon</option>\r\n            <option value=\"dark\">dark</option>\r\n            <option value=\"fairy\">fairy</option>\r\n            <option value=\"unknown\">unknown</option>\r\n            <option value=\"shadow\">shadow</option>\r\n        </select>\r\n        </div>\r\n        <div>\r\n        <select value={selectedSort} onChange={e=>handleSortSpeed(e)} className={style.order}>\r\n            <option>---</option>\r\n            <option value=\"asc speed\">-Speed</option>\r\n            <option value=\"desc speed\">+ Speed</option>\r\n        </select>\r\n        </div>\r\n        <div>\r\n            <img className={style.gif} src=\"https://www.pkparaiso.com/imagenes/espada_escudo/sprites/animados-gigante/lucario.gif\"\r\n            width=\"150px\" height=\"300px\"/>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        <div className={style.totalImg}>\r\n        <div className={style.columnsf}>\r\n         <img src=\"https://1000marcas.net/wp-content/uploads/2020/01/Logo-Pokemon.png\" alt=\"img not found\"\r\n            width=\"335px\" height=\"208px\" className={style.img}/>\r\n        <Paginacion pokemonsPerPage={pokemonsPerPage}\r\n        allPokemons={allPokemons.length}\r\n        paginado ={paginado}\r\n        currentPage={currentPage}\r\n        /> \r\n        </div> \r\n        <div className={style.columnsR}>\r\n            {\r\n                 loading ?(\r\n                <div className={style.img2}>\r\n                <img  src=\"https://media.tenor.com/74l5y1hUdtwAAAAj/pokemon.gif\"\r\n                width=\"250px\" height=\"250px\" />\r\n                <p>Loading...</p>\r\n               </div>\r\n                 ): searchError ? (\r\n                    <div>\r\n                         <img className={style.img3} src=\"https://i0.wp.com/eltallerdehector.com/wp-content/uploads/2022/06/6420b-pikachu-sentado-png.png?resize=800%2C800&ssl=1\"\r\n                width=\"150px\" height=\"150px\" />\r\n                <div className={style.errorMsg}>\r\n                    <h1>Error 404</h1>\r\n                    <h5>The pokemon does not exist</h5></div>\r\n                    </div>\r\n                 ):(\r\n            currentPokemons.map((pok)=>{\r\n                return (\r\n                <div className={style.cardContainer} >\r\n                <Card name={pok.name} Types={pok.Types} image={pok.img?pok.img:pok.image} id={pok.id} key={pok.id}/> \r\n                </div>\r\n                )\r\n            }))\r\n            }\r\n        </div>\r\n        </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}",["87","88"],"C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\components\\Card.jsx",[],[],"C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\components\\paginado.jsx",["89","90","91"],[],"import React from \"react\";\r\nimport style from './paginado.module.css'\r\n\r\nexport default function Paginacion ({pokemonsPerPage, paginado, allPokemons, currentPage}){\r\n    const pageNumbers=[]\r\n    for (let i=0; i<=Math.ceil(allPokemons/pokemonsPerPage)-1; i++){\r\n        pageNumbers.push(i+1)\r\n    }\r\n    const maxPages = 10;\r\n    const currentBlock = Math.ceil(currentPage / maxPages);\r\n    const firstPage = (currentBlock - 1) * maxPages;\r\n    const lastPage = Math.min(currentBlock * maxPages, pageNumbers.length);\r\n    const nextPage = currentBlock < Math.ceil(pageNumbers.length / maxPages) ? lastPage + 1 : currentPage;\r\n    const prevPage = currentBlock > 1 ? firstPage - 1 : currentPage;\r\n    return (\r\n        <div>\r\n        <nav>\r\n            <ul className={style.paginacion} >\r\n                <li className={style.pageItem}>\r\n                    <a className={style.pageLink} onClick={()=>paginado(prevPage)}>{\"<\"}</a>\r\n                </li>\r\n                {pageNumbers.slice(firstPage, lastPage).map(number=>(\r\n                    <li className={`${style.pageItem} ${number === currentPage ? style.active : \"\"}`} key={number}>\r\n                        <a className={style.pageLink} onClick={()=>paginado(number)}>{number}</a>\r\n                    </li>\r\n\r\n                ))}\r\n                <li className={style.pageItem}>\r\n                    <a className={style.pageLink} onClick={()=>paginado(nextPage)}>{\">\"}</a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\ACER\\Downloads\\POKEMON-FRONT\\src\\components\\home.jsx",["92","93","94","95","96"],[],{"ruleId":"97","severity":1,"message":"98","line":28,"column":29,"nodeType":"99","messageId":"100","endLine":28,"endColumn":37},{"ruleId":"97","severity":1,"message":"98","line":40,"column":29,"nodeType":"99","messageId":"100","endLine":40,"endColumn":37},{"ruleId":"97","severity":1,"message":"98","line":52,"column":29,"nodeType":"99","messageId":"100","endLine":52,"endColumn":37},{"ruleId":"97","severity":1,"message":"98","line":64,"column":29,"nodeType":"99","messageId":"100","endLine":64,"endColumn":37},{"ruleId":"97","severity":1,"message":"98","line":76,"column":29,"nodeType":"99","messageId":"100","endLine":76,"endColumn":37},{"ruleId":"97","severity":1,"message":"98","line":88,"column":29,"nodeType":"99","messageId":"100","endLine":88,"endColumn":37},{"ruleId":"97","severity":1,"message":"98","line":100,"column":29,"nodeType":"99","messageId":"100","endLine":100,"endColumn":37},{"ruleId":"101","severity":1,"message":"102","line":85,"column":7,"nodeType":"103","endLine":85,"endColumn":9,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":27,"column":15,"nodeType":"107","endLine":27,"endColumn":111},{"ruleId":"108","severity":1,"message":"109","line":13,"column":12,"nodeType":"110","messageId":"111","endLine":13,"endColumn":17},{"ruleId":"108","severity":1,"message":"112","line":15,"column":29,"nodeType":"110","messageId":"111","endLine":15,"endColumn":47},{"ruleId":"105","severity":1,"message":"106","line":206,"column":13,"nodeType":"107","endLine":207,"endColumn":43},{"ruleId":"105","severity":1,"message":"106","line":225,"column":17,"nodeType":"107","endLine":226,"endColumn":48},{"ruleId":"105","severity":1,"message":"106","line":231,"column":26,"nodeType":"107","endLine":232,"endColumn":48},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":20,"column":21,"nodeType":"107","endLine":20,"endColumn":84},{"ruleId":"117","severity":1,"message":"118","line":24,"column":25,"nodeType":"107","endLine":24,"endColumn":86},{"ruleId":"117","severity":1,"message":"118","line":29,"column":21,"nodeType":"107","endLine":29,"endColumn":84},{"ruleId":"108","severity":1,"message":"109","line":13,"column":12,"nodeType":"110","messageId":"111","endLine":13,"endColumn":17},{"ruleId":"108","severity":1,"message":"112","line":15,"column":29,"nodeType":"110","messageId":"111","endLine":15,"endColumn":47},{"ruleId":"105","severity":1,"message":"106","line":206,"column":13,"nodeType":"107","endLine":207,"endColumn":43},{"ruleId":"105","severity":1,"message":"106","line":225,"column":17,"nodeType":"107","endLine":226,"endColumn":48},{"ruleId":"105","severity":1,"message":"106","line":231,"column":26,"nodeType":"107","endLine":232,"endColumn":48},"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["119"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'orden' is assigned a value but never used.","Identifier","unusedVar","'setpokemonsPerPage' is assigned a value but never used.","no-native-reassign",["120"],"no-negated-in-lhs",["121"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"122","fix":"123"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"124","text":"125"},[2248,2250],"[dispatch]"]