{"ast":null,"code":"import axios from 'axios';\nexport function getVideogames() {\n  return async function (dispatch) {\n    try {\n      const infoApi = await axios.get(`https://api.rawg.io/api/games?key=d1d3308a99164c1c8cda0e11babe093d&page=1`);\n      const allVideogames = infoApi.data.results;\n      const infoApiId = allVideogames.map(elem => axios.get(`https://api.rawg.io/api/games/${elem.id}?key=d1d3308a99164c1c8cda0e11babe093d&page=1`));\n      const infoApiAll = await axios.all(infoApiId);\n      const infoApiresponses = infoApiAll.map(response => {\n        var _response$data$platfo, _response$data$genres;\n        const {\n          id,\n          name,\n          description,\n          background_image,\n          rating,\n          released\n        } = response.data;\n        const platforms = ((_response$data$platfo = response.data.platforms) === null || _response$data$platfo === void 0 ? void 0 : _response$data$platfo.map(platform => platform.platform.name)).join(\", \");\n        const genres = ((_response$data$genres = response.data.genres) === null || _response$data$genres === void 0 ? void 0 : _response$data$genres.map(genre => genre.name)).join(\", \");\n        return {\n          id,\n          name,\n          background_image,\n          description: description.replaceAll(/<[^>]+>/g, \" \"),\n          genres: genres,\n          platforms: platforms,\n          rating,\n          released\n        };\n      });\n      const dbVideogames = await Videogame.findAll({\n        include: {\n          model: Genre,\n          attributes: ['name'],\n          through: {\n            attributes: []\n          }\n        }\n      });\n      return [...infoApiresponses, ...dbVideogames];\n    } catch (error) {\n      console.log(error);\n      return [];\n    }\n    dispatch({\n      type: \"GET_VIDEOGAMES\",\n      payload: apifinal\n    });\n  };\n}\nexport function getNameVideogames(name) {\n  return async function (dispatch) {\n    var json = await axios.get(\"http://localhost:3001/videogames?name=\" + name);\n    return dispatch({\n      type: \"GET_NAME_VIDEOGAMES\",\n      payload: json.data\n    });\n  };\n}\n/*export function getGenres(){\r\n    return async function (dispatch){\r\n        var json= await axios.get(\"http://localhost:3001/genres\");\r\n        return dispatch({\r\n        type:\"GET_GENRES\", \r\n        payload:json.data});\r\n    }\r\n}\r\nexport function postVideogames(payload){\r\n    return async function (dispatch){\r\n        var json= await axios.post(\"http://localhost:3001/videogames\", payload);\r\n        console.log(json)\r\n        return json\r\n    }\r\n}*/\nexport function orderByName(payload) {\n  return {\n    type: \"ORDER_BY_NAME\",\n    payload\n  };\n}\n;\nexport function filterVideogamesByGenres(payload) {\n  return {\n    type: 'FILTER_BY_GENRES',\n    payload\n  };\n}\n;\nexport function filterCreated(payload) {\n  console.log(payload);\n  return {\n    type: \"FILTER_CREATED\",\n    payload\n  };\n}\n;","map":{"version":3,"names":["axios","getVideogames","dispatch","infoApi","get","allVideogames","data","results","infoApiId","map","elem","id","infoApiAll","all","infoApiresponses","response","_response$data$platfo","_response$data$genres","name","description","background_image","rating","released","platforms","platform","join","genres","genre","replaceAll","dbVideogames","Videogame","findAll","include","model","Genre","attributes","through","error","console","log","type","payload","apifinal","getNameVideogames","json","orderByName","filterVideogamesByGenres","filterCreated"],"sources":["C:/Users/ACER/Downloads/PI-Videogames FINAL-main/client/src/actions/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport function getVideogames(){\r\n    return async function (dispatch){\r\n        try{\r\n            const infoApi =await axios.get(`https://api.rawg.io/api/games?key=d1d3308a99164c1c8cda0e11babe093d&page=1`);\r\n            const allVideogames=  infoApi.data.results\r\n            const infoApiId =allVideogames.map(elem => axios.get(`https://api.rawg.io/api/games/${elem.id}?key=d1d3308a99164c1c8cda0e11babe093d&page=1`));\r\n            const infoApiAll =await axios.all(infoApiId);\r\n            const infoApiresponses =infoApiAll.map(response=>{\r\n                const {id, name, description, background_image, rating, released}=response.data;\r\n                const platforms = (response.data.platforms?.map(platform=>platform.platform.name)).join(\", \");\r\n                const genres = (response.data.genres?.map(genre=>genre.name)).join(\", \");\r\n                return {\r\n                    id,\r\n                    name, \r\n                    background_image, \r\n                    description:description.replaceAll(/<[^>]+>/g, \" \"),\r\n                    genres:genres,\r\n                    platforms:platforms,\r\n                    rating,\r\n                    released\r\n                };\r\n            });\r\n            const dbVideogames= await Videogame.findAll({\r\n                include:{\r\n                    model:Genre,\r\n                    attributes:['name'],\r\n                    through:{\r\n                        attributes:[],\r\n                    }\r\n                    }\r\n                });\r\n             \r\n            return [...infoApiresponses,...dbVideogames];\r\n            }catch(error){\r\n                console.log(error);\r\n                return []\r\n            }\r\n         dispatch({type:\"GET_VIDEOGAMES\", \r\n        payload:apifinal});\r\n    }\r\n}\r\n\r\nexport function getNameVideogames(name){\r\n    return async function (dispatch){\r\n        var json= await axios.get(\"http://localhost:3001/videogames?name=\" + name);\r\n        return dispatch({\r\n        type:\"GET_NAME_VIDEOGAMES\", \r\n        payload:json.data});\r\n\r\n}\r\n}\r\n/*export function getGenres(){\r\n    return async function (dispatch){\r\n        var json= await axios.get(\"http://localhost:3001/genres\");\r\n        return dispatch({\r\n        type:\"GET_GENRES\", \r\n        payload:json.data});\r\n    }\r\n}\r\nexport function postVideogames(payload){\r\n    return async function (dispatch){\r\n        var json= await axios.post(\"http://localhost:3001/videogames\", payload);\r\n        console.log(json)\r\n        return json\r\n    }\r\n}*/\r\nexport function orderByName(payload){\r\n    return {\r\n        type:\"ORDER_BY_NAME\",\r\n        payload\r\n    }\r\n};\r\nexport function filterVideogamesByGenres(payload){\r\nreturn {\r\n    type:'FILTER_BY_GENRES',\r\n    payload\r\n}\r\n};\r\nexport function filterCreated(payload){\r\n    console.log(payload);\r\n    return {\r\n        type:\"FILTER_CREATED\",\r\n        payload\r\n    }\r\n    };"],"mappings":"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"},"metadata":{},"sourceType":"module"}